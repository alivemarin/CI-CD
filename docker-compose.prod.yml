version: '3.9'
services:
  web:
    image: ${DOCKERHUB_USERNAME:-yourusername}/myflask:latest
    environment:
      - FLASK_ENV=production
    expose:
      - "5000"           # 외부 노출은 nginx가 담당
    restart: unless-stopped

  nginx:
    container_name: nginx
    image: nginx:alpine
    depends_on:
      - web
    ports:
      - "80:80" # HTTP 포트
      - "443:443" #443 포트 추가 (HTTPS)
    volumes:
      - ./nginx/default.conf.template:/etc/nginx/templates/default.conf.template:ro # 템플릿 파일 읽기형식으로 넣기
      - ./certbot/config:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    environment:           # ← 매핑 형식
      DOMAIN: ${DOMAIN}
    entrypoint:
      - sh
      - -exc
      - |
        envsubst '$DOMAIN' < /etc/nginx/templates/default.conf.template \
          > /etc/nginx/conf.d/default.conf
        exec nginx -g 'daemon off;'
    restart: unless-stopped

certbot:  #초기발급 certbot 서비스
    image: certbot/certbot
    command:
      - certonly
      - --webroot
      - --webroot-path=/var/www/certbot
      - --non-interactive # 비대화식 모드
      - --agree-tos
      - --email
      - "${LETSENCRYPT_EMAIL}"
      - -d
      - "${DOMAIN}"
    volumes:
      - ./certbot/config:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    restart: "no" # 초기 발급 후 재시작하지 않음

certbot-renew:  # 인증서 갱신 서비스
    image: certbot/certbot
    volumes:
      - ./certbot/config:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - /var/run/docker.sock:/var/run/docker.sock
    entrypoint: >
      sh -c "while true; do
               certbot renew --quiet --deploy-hook 'docker exec nginx nginx -s reload';
               sleep 12h;
             done"
    restart: unless-stopped

volumes:
  certbot-config:
    driver: local
  certbot-www:
    driver: local

